{"version":3,"file":"chartstack.min.js","sources":["../src/chartstack.js","../src/adapter/chartstack.keen.universal.adapter.js","../src/adapter/chartstack.universal.nvd3.adapter.js","../src/renderer/chartstack.nvd3.renderer.js","../src/adapter/chartstack.universal.googlecharts.adapter.js","../src/renderer/chartstack.googlecharts.renderer.js","../src/adapter/chartstack.universal.highcharts.adapter.js","../src/renderer/chartstack.highcharts.renderer.js"],"names":["chartstack","is","o","t","each","cb","s","n","length","call","hasOwnProperty","extend","e","v","ready","isDomReady","readyCallbacks","push","bootstrap","defaults","library","Object","keys","renderers","ns","window","Error","parse","chartNodes","document","querySelectorAll","el","getAttribute","Chart","getJSON","url","xhr","createXHR","ActiveXObject","console","warn","message","XMLHttpRequest","onreadystatechange","readyState","JSON","responseText","open","setRequestHeader","send","get","strOrEl","matchedChart","nodeName","querySelector","charts","chart","addAdapter","domain","configObj","func","type","adapters","addRenderer","provider","labels","args","setup","setupDom","setupJS","$chart","chartType","toLocaleLowerCase","style","display","k","attr","test","newKey","nodeType","init","datasource","match","fetch","finish","data","this","renderer","show","hide","render","google","load","packages","setOnLoadCallback","addEventListener","normalize","result","newHeader","oldKey","hasTimeFrame","timeframe","hasSeries","value","Array","newBody","item","row","startDate","Date","start","a","entry","unshift","piechart","barchart","linechart","ar","shift","label","section","colomnKeys","rowDescription","name","key","values","selection","rowDesc","y","x","options","svg","createElementNS","m","parseInt","setAttributeNS","appendChild","nv","addGraph","models","pieChart","d","showLabels","d3","select","datum","transition","duration","multiBarChart","width","height","xAxis","tickFormat","time","format","yAxis","utils","windowResize","update","lineChart","color","scale","category10","range","useInteractiveGuideline","visualization","arrayToDataTable","title","PieChart","draw","BarChart","LineChart","headers","join","categories","Highcharts","renderTo","plotBackgroundColor","plotBorderWidth","plotShadow","text","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","connectorColor","formatter","point","percentage","series","min","align","overflow","bar","legend","layout","verticalAlign","floating","borderWidth","backgroundColor","shadow","credits","plotLines"],"mappings":"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","sourcesContent":["/* global google */\n(function(chartstack) {\n  var adapters, renderers, charts, Chart, isDomReady, readyCallbacks = [];\n\n  // These three functions taken from https://github.com/spocke/punymce\n  function is(o, t){\n    o = typeof(o);\n\n    if (!t){\n      return o != 'undefined';\n    }\n\n    return o == t;\n  }\n\n  function each(o, cb, s){\n    var n;\n\n    if (!o){\n      return 0;\n    }\n\n    s = !s ? o : s;\n\n    if (is(o.length)){\n      // Indexed arrays, needed for Safari\n      for (n=0; n<o.length; n++) {\n        if (cb.call(s, o[n], n, o) === false){\n          return 0;\n        }\n      }\n    } else {\n      // Hashtables\n      for (n in o){\n        if (o.hasOwnProperty(n)) {\n          if (cb.call(s, o[n], n, o) === false){\n            return 0;\n          }\n        }\n      }\n    }\n\n    return 1;\n  }\n\n  function extend(o, e){\n    each(e, function(v, n){\n      o[n] = v;\n    });\n\n    return o;\n  }\n\n  // DOM-ready queue method.\n  function ready(cb){\n    if (!isDomReady){\n      readyCallbacks.push(cb);\n    }else{\n      cb();\n    }\n  }\n\n  // Called when DOM and chart libs are loaded and ready.\n  function bootstrap (){\n    // If graph library isn't set in defaults, match provider to the first graph\n    // lib found on the page that we have an adapter for.\n    if (chartstack.defaults.library){\n      chartstack.library = chartstack.defaults.library;\n    }else{\n      each(Object.keys(chartstack.renderers), function(ns){\n        if (ns in window){\n          chartstack.library = ns;\n          return false;\n        }\n      });\n\n      if (!chartstack.library){\n        throw new Error('No charting library located.');\n      }\n\n      // Parse the dom.\n      chartstack.parse();\n\n      isDomReady = true;\n      each(readyCallbacks, function(cb){\n        cb();\n      });\n    }\n  }\n\n  function parse(){\n    var chartNodes = document.querySelectorAll('piechart,barchart,linechart');\n    each(chartNodes, function(el){\n      // Ensure data attribute exists.\n      if (el.getAttribute('datasource')){\n        new Chart(el);\n      }\n    });\n  }\n\n  function getJSON(url, cb) {\n    var xhr;\n    var createXHR = function(){\n      var xhr;\n      if (window.ActiveXObject){\n        try{\n          xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }catch(e){\n          console.warn(e.message);\n          xhr = null;\n        }\n      }else{\n        xhr = new XMLHttpRequest();\n      }\n      return xhr;\n    };\n\n    xhr = createXHR();\n    xhr.onreadystatechange = function(){\n      if (xhr.readyState === 4){\n        cb(JSON.parse(xhr.responseText));\n      }\n    };\n    xhr.open('GET', url, true);\n    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    xhr.send();\n  }\n\n  // Returns a chartstack object by html element id or element comparison.\n  function get(strOrEl){\n    var el = strOrEl.nodeName ? strOrEl : document.querySelector(strOrEl);\n    var matchedChart;\n\n    if (el){\n      each(chartstack.charts, function(chart){\n        if (el == chart.el){\n          matchedChart = chart;\n          return false;\n        }\n      });\n      return matchedChart;\n    }\n    throw(\"That element doesn't exist on the page.\");\n  }\n\n  // Adapters that normalize 3rd party api to a standard format.\n  function addAdapter(domain, configObj){\n    each(configObj, function(func, type){\n      if (!adapters[domain]){\n        adapters[domain] = {};\n      }\n\n      adapters[domain][type] = func;\n\n    });\n  }\n\n  // Chart specific Renderers that Chartstack uses to render charts.\n  function addRenderer(provider, configObj){\n    each(configObj, function(func, type){\n      if (!renderers[provider]){\n        renderers[provider] = {};\n      }\n\n      renderers[provider][type] = func;\n    });\n  }\n\n  // Placeholder for chartstack data adapters.\n  chartstack.adapters = adapters = {};\n\n  // Placeholder for chartstack renderers.\n  chartstack.renderers = renderers = {};\n\n  // Array of instantiated charts.\n  chartstack.charts = charts = [];\n\n  // Store them in API as well for plugin use.\n  extend(chartstack, {\n    parse : parse,\n    is : is,\n    each : each,\n    extend : extend,\n    getJSON : getJSON,\n    ready: ready,\n    get: get,\n    addAdapter : addAdapter,\n    addRenderer : addRenderer\n  });\n\n  // Defaults accessible from outside in case user wants to change them.\n  // DOM properties override defaults.\n  chartstack.defaults = {\n    labels: true\n  };\n\n  // Main Chart class.\n  chartstack.Chart = Chart = function(args) {\n    var $chart = this;\n    // Add to internal array.\n    chartstack.charts.push(this);\n\n    // Collects properties off DOM element and inspects data source.\n\n    function setup(){\n      var setupDom, setupJS, domain;\n\n      setupDom = function(){\n        $chart.el = args;\n\n        // Type of chart.\n        $chart.chartType = $chart.el.nodeName.toLocaleLowerCase();\n\n        // Our made up HTML nodes are display: inline so we need to make\n        // them block;\n        $chart.el.style.display = \"inline-block\";\n      };\n\n      setupJS = function(){\n        $chart.el = args.el;\n\n        // Type of chart.\n        $chart.chartType = args.chartType;\n      }\n\n      // Copy global defaults on to this chart.\n      each(chartstack.defaults, function(k, v){\n        $chart[v] = k;\n      });\n\n      if ('nodeType' in args){\n        setupDom();\n      }else{\n        setupJS();\n      }\n\n      // Find properties on dom element to override defaults.\n      // Support arrays here so we can store the data under a different name.\n      each([['provider', 'domain'], 'datasource', 'library', 'labels', 'width', 'height', 'title'], function(attr){\n        var test, newKey;\n\n        if (is(attr, 'object')){\n          newKey = attr[1];\n          attr = attr[0];\n        }\n        test = args.nodeType ? args.getAttribute(attr) : args[attr];\n        // If property exists, save it.\n        if (test){\n          // Support for real booleans.\n          if (test == 'false' || test == '0' || test == 'off'){\n            test = false;\n          }else if (test == 'true' || test == '1' || test == \"on\"){\n            test = true;\n          }\n\n          if (newKey){\n            $chart[newKey] = test;\n          }else{\n            $chart[attr] = test;\n          }\n        }\n      });\n\n      // If we don't have a localized library set on this chart then set the\n      // global one.\n      if (!$chart.library){\n        $chart.library = chartstack.library;\n      }\n\n      // Run library renderer's init if the lib needs to do some setup.\n      if (renderers[$chart.library] && renderers[$chart.library].init){\n        renderers[$chart.library].init($chart);\n      }\n\n      // Check datasource starts with { or [ assume it's JSON or else\n      // assume it's a URL to fetch.  We do not check for http anymore\n      // as it can be a local/relative file.\n      if ($chart.datasource.match(/^({|\\[)/)){\n        $chart.datasource = JSON.parse($chart.datasource);\n      }else{\n        domain = $chart.datasource.match(/\\/\\/(.*?)\\//);\n        if (domain){\n          $chart.domain = domain[1];\n        }\n      }\n    }\n\n\n    // Fetches and normalizes data with a callback to pass data to.\n    function fetch(cb){\n      function finish(data){\n        // Check if we have adapters for this domain and that we also\n        // have a chart adapter for this chart from this domain.\n        if (adapters[$chart.domain] && adapters[$chart.domain][$chart.chartType]){\n          data = adapters[$chart.domain][$chart.chartType](data);\n        }\n\n        // Transform data into graph libs format.\n        data = adapters[$chart.library][$chart.chartType](data);\n        cb(data);\n      }\n\n      // If this is a URL fetch data.\n      if (typeof $chart.datasource == \"string\"){\n        chartstack.getJSON($chart.datasource, finish);\n        // The data is local.\n      }else{\n        finish($chart.datasource);\n      }\n    }\n\n    setup();\n    fetch(function(data){\n      var renderer = chartstack.renderers[$chart.library];\n      if (!renderer){\n        throw('Renderer for ' + $chart.library + ' is missing.');\n      }else if(!renderer[$chart.chartType]){\n        throw('Renderer for ' + $chart.library + ':' + $chart.chartType + ' is missing.');\n      }\n      renderer[$chart.chartType]($chart, data);\n    });\n\n    // Public methods\n    extend(this, {\n      show : function(){\n        this.el.style.display = 'none';\n      },\n\n      hide : function(){\n        this.el.style.display = 'block';\n      },\n\n      render : function(){\n        // TODO\n        // chartstack.renderer[this.chartType](this, this.fetch());\n      },\n\n      fetch : function(cb){\n        cb || (cb = function(){});\n        fetch(cb);\n      }\n    });\n  };\n\n  // Hack to support google charts.\n  if (window.google){\n    google.load('visualization', '1.0', {'packages':['corechart']});\n    google.setOnLoadCallback(bootstrap);\n  }else{\n    document.addEventListener(\"DOMContentLoaded\", bootstrap);\n  }\n\n  // Expose chartstack\n  window.chartstack = chartstack;\n})({});\n","/* global chartstack */\n// Data normalizing adaper for keen.io API.\n(function(){\n\n  function normalize(data){\n    data = data.result;\n    var hasTimeFrame = data[0].timeframe ? 1 : 0;\n    var hasSeries = data[0].value instanceof Array ? 1 : 0;\n    var newHeader;\n    var newBody = [];\n    var oldKey;\n    var each = chartstack.each;\n\n    if (hasTimeFrame){\n      newHeader = ['date'];\n      if (hasSeries){\n        oldKey = Object.keys(data[0].value[0])[0];\n\n        each(data[0].value, function(item){\n          var newKey = item[oldKey];\n          newHeader.push(newKey);\n        });\n\n        each(data, function(item){\n          var row = [];\n          var startDate = new Date(item.timeframe.start);\n          row.push(startDate);\n          each(item.value, function(a){\n            row.push(a.result);\n          });\n          newBody.push(row);\n        });\n      }else{\n        newHeader.push('value');\n        each(data, function(item){\n          newBody.push([new Date(item.timeframe.start), item.value]);\n        });\n      }\n    }else{\n      // Assuming pie chart data\n      // Set header\n      newHeader = Object.keys(data[0]);\n\n      each(data, function(a){\n        var entry = [a[newHeader[0]], a[newHeader[1]]];\n        newBody.push(entry);\n      });\n    }\n\n    newBody.unshift(newHeader);\n    return newBody;\n  }\n\n  chartstack.addAdapter('api.keen.io', {\n    piechart: function(data){\n      return normalize(data);\n    },\n\n    barchart: function(data){\n      return normalize(data);\n    },\n\n    linechart: function(data){\n      return normalize(data);\n    }\n  });\n\n})();\n","/* global chartstack */\n\nchartstack.addAdapter('nv', {\n  piechart: function(data){\n    var ar = [];\n\n    // Pop off unused header array.\n    data.shift();\n\n    chartstack.each(data, function(item){\n      var entry = {\n        label: item[0],\n        value: item[1]\n      };\n      ar.push(entry);\n    });\n    return ar;\n  },\n\n  barchart: function(data){\n    var each = chartstack.each;\n    var section = [];\n    var colomnKeys = data.shift();\n    var rowDescription = colomnKeys.shift();\n\n    // Prep rows\n    each(colomnKeys, function(name){\n      section.push({\n        key: name,\n        values: []\n      });\n    });\n\n    each(data, function(selection){\n      var rowDesc = selection.shift();\n      each(selection, function(y, a){\n        section[a].values.push({\n          x: rowDesc,\n          y: y\n        });\n      });\n    });\n\n    return {\n      result: section,\n      options: {\n        rowDescription: rowDescription\n      }\n    };\n  },\n\n  linechart: function(data){\n    var each = chartstack.each;\n    var section = [];\n    var colomnKeys = data.shift();\n    var rowDescription = colomnKeys.shift();\n\n    // Prep rows\n    each(colomnKeys, function(name){\n      section.push({\n        key: name,\n        values: []\n      });\n    });\n\n    each(data, function(selection){\n      var rowDesc = selection.shift();\n      each(selection, function(y, a){\n        section[a].values.push([rowDesc, y]);\n      });\n    });\n\n    return {\n      result: section,\n      options: {\n        rowDescription: rowDescription\n      }\n    };\n  }\n});\n","/* global chartstack, nv, d3 */\nchartstack.addRenderer('nv', {\n\n  init: function($chart){\n    // Create the SVG element that D3 needs.\n    $chart.svg = document.createElementNS ('http://www.w3.org/2000/svg', 'svg');\n    // Set height and width of SVG to it's parent's container.\n    chartstack.each(['width', 'height'], function(m){\n      var v = parseInt($chart[m]);\n      $chart[m] = v;\n      $chart.svg.setAttributeNS(null, m, v);\n    });\n\n    $chart.el.appendChild($chart.svg);\n  },\n\n  piechart: function($chart, data){\n    // Regular pie chart example\n    nv.addGraph(function() {\n      var chart = nv.models.pieChart()\n        .x(function(d) { return d.label; })\n        .y(function(d) { return d.value; })\n        .showLabels($chart.labels);\n\n      d3.select($chart.svg)\n        .datum(data)\n        .transition().duration(350)\n        .call(chart);\n\n      return chart;\n    });\n  },\n\n  barchart: function($chart, data){\n    nv.addGraph(function() {\n      var chart = nv.models.multiBarChart();\n\n      // Required to set the height once more or it's too small.\n      chart.width($chart.width).height($chart.height);\n\n      if (data.result[0].values[0].x instanceof Date){\n        chart.xAxis\n          .tickFormat(function(d) {\n            return d3.time.format('%b %d')(new Date(d));\n          });\n      }else{\n        chart.xAxis\n        .tickFormat(d3.format('f'));\n      }\n\n      chart.yAxis\n        //.axisLabel('Count')\n        .tickFormat(d3.format(',f'));\n\n      d3.select($chart.svg)\n        .datum(data.result)\n        .transition().duration(500)\n        .call(chart);\n\n      nv.utils.windowResize(chart.update);\n    });\n  },\n\n  linechart: function($chart, data){\n    var chart = nv.models.lineChart()\n      .x(function(d) { return d[0]; })\n      .y(function(d) { return d[1]; })\n      .color(d3.scale.category10().range())\n      .useInteractiveGuideline(true);\n\n    chart.width($chart.width).height($chart.height);\n    if (data.result[0].values[0][0] instanceof Date){\n      chart.xAxis\n        .tickFormat(function(d) {\n          return d3.time.format('%b %d')(new Date(d));\n        });\n    }else{\n      chart.xAxis\n        .tickFormat(d3.format('f'));\n    }\n\n    //chart.xAxis\n    //  .tickFormat(function(d) {\n    //    return d3.time.format('%x')(new Date(d));\n    //  });\n\n    chart.yAxis\n      .tickFormat(d3.format(',g'));\n\n    d3.select($chart.svg)\n      .datum(data.result)\n      .call(chart);\n\n    nv.utils.windowResize(chart.update);\n    return chart;\n  }\n\n});\n","/* global google, chartstack */\n\nchartstack.addAdapter('google', {\n  piechart: function(data){\n    return google.visualization.arrayToDataTable(data);\n  },\n\n  barchart: function(data){\n    return google.visualization.arrayToDataTable(data);\n  },\n\n  linechart: function(data){\n    return google.visualization.arrayToDataTable(data);\n  }\n});\n","/* global google, chartstack */\nchartstack.addRenderer('google', {\n\n  piechart: function($chart, data){\n    var chart, options;\n\n    // Set chart options\n    options = {\n      'title': $chart.title || '',\n      'width': parseInt($chart.width),\n      'height': parseInt($chart.height)\n    };\n\n    chart = new google.visualization.PieChart($chart.el);\n    chart.draw(data, options);\n  },\n\n  barchart: function($chart, data){\n    var chart, options;\n\n    options = {\n      title: $chart.title || '',\n    };\n\n    chart = new google.visualization.BarChart($chart.el);\n    chart.draw(data, options);\n  },\n\n  linechart: function($chart, data){\n    var chart, options;\n\n    options = {\n      title: $chart.title || '',\n    };\n\n    chart = new google.visualization.LineChart($chart.el);\n    chart.draw(data, options);\n  }\n\n});\n","/* global chartstack */\n\nchartstack.addAdapter('Highcharts', {\n  piechart: function(data){\n    var headers = data.shift();\n    return {\n      type: 'pie',\n      name: headers.join(' '),\n      data: data\n    };\n  },\n\n  barchart: function(data){\n    var each = chartstack.each;\n    var section = [];\n    var colomnKeys = data.shift();\n    var rowDescription = colomnKeys.shift();\n    var categories = [];\n\n    // Prep rows\n    each(colomnKeys, function(name){\n      section.push({\n        name: name,\n        data: []\n      });\n    });\n\n    each(data, function(selection){\n      categories.push(selection.shift());\n      each(selection, function(y, a){\n        section[a].data.push(y);\n      });\n    });\n\n    return {\n      result: section,\n      options: {\n        categories: categories,\n        rowDescription: rowDescription\n      }\n    };\n  },\n\n  linechart: function(data){\n    var each = chartstack.each;\n    var section = [];\n    var colomnKeys = data.shift();\n    var rowDescription = colomnKeys.shift();\n    var categories = [];\n\n    // Prep rows\n    each(colomnKeys, function(name){\n      section.push({\n        name: name,\n        data: []\n      });\n    });\n\n    each(data, function(selection){\n      categories.push(selection.shift());\n      each(selection, function(y, a){\n        section[a].data.push(y);\n      });\n    });\n    return {\n      result: section,\n      options: {\n        categories: categories,\n        rowDescription: rowDescription\n      }\n    };\n  }\n});\n","/* global chartstack, Highcharts */\nchartstack.addRenderer('Highcharts', {\n\n  piechart: function($chart, data){\n    return new Highcharts.Chart({\n      chart: {\n        renderTo: $chart.el,\n        type: 'pie',\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false\n      },\n      title: {\n        text: $chart.title || ''\n      },\n\n      //tooltip: {\n      //  pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      //},\n\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            color: '#000000',\n            connectorColor: '#000000',\n            formatter: function() {\n              return '<b>'+ this.point.name +'</b>: '+ this.percentage +' %';\n            }\n          }\n        }\n      },\n\n      series: [data]\n    });\n  },\n\n  barchart: function($chart, data){\n    return new Highcharts.Chart({\n      chart: {\n        renderTo: $chart.el,\n        type: 'bar',\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false\n      },\n      title: {\n        text: $chart.title || ''\n      },\n      xAxis: {\n        title: {\n          text: data.options.rowDescription\n        },\n        labels: {\n          // format: '{value:%m-%d}'\n        },\n        categories: data.options.categories\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          align: 'high'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      //tooltip: {\n      //  valueSuffix: ' millions'\n      //},\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'top',\n        x: -40,\n        y: 100,\n        floating: true,\n        borderWidth: 1,\n        backgroundColor: '#FFFFFF',\n        shadow: true\n      },\n      credits: {\n        enabled: false\n      },\n      series: data.result\n    });\n  },\n\n  linechart: function($chart, data){\n    return new Highcharts.Chart({\n      chart: {\n        renderTo: $chart.el,\n        type: 'line',\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false\n      },\n      title: {\n        text: $chart.title || '',\n        x: -20 //center\n      },\n      xAxis: {\n        categories: data.options.categories,\n        title: {\n          text: data.options.rowDescription\n        }\n      },\n      yAxis: {\n        title: {\n          // text: 'Temperature (°C)'\n        },\n        plotLines: [{\n          value: 0,\n          width: 1,\n          color: '#808080'\n        }]\n      },\n      //tooltip: {\n      //  valueSuffix: '°C'\n      //},\n      legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle',\n        borderWidth: 0\n      },\n      series: data.result\n    });\n  }\n});\n"]}